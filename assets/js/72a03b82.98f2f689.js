"use strict";(self.webpackChunkntu_dsai_github_io=self.webpackChunkntu_dsai_github_io||[]).push([[9351],{3905:function(e,t,o){o.d(t,{Zo:function(){return u},kt:function(){return m}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(o),m=r,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return o?n.createElement(f,i(i({ref:t},u),{},{components:o})):n.createElement(f,i({ref:t},u))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}p.displayName="MDXCreateElement"},6535:function(e,t,o){o.r(t),o.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var n=o(3117),r=o(102),a=(o(7294),o(3905)),i=["components"],s={id:"sc2207-intro-to-database-systems",slug:"sc2207-intro-to-database-systems",sidebar_position:5,title:"SC2207 Intro to Database Systems",description:"Introductory module to relational databases",keywords:["database","computer","science","ntu","course","scse","module"]},l=void 0,c={unversionedId:"Module-Review/Y2S2/sc2207-intro-to-database-systems",id:"Module-Review/Y2S2/sc2207-intro-to-database-systems",title:"SC2207 Intro to Database Systems",description:"Introductory module to relational databases",source:"@site/docs/Module-Review/Y2S2/SC2207 Intro to Database Systems.md",sourceDirName:"Module-Review/Y2S2",slug:"/Module-Review/Y2S2/sc2207-intro-to-database-systems",permalink:"/docs/Module-Review/Y2S2/sc2207-intro-to-database-systems",editUrl:"https://github.com/NTU-DSAI/NTU-DSAI.github.io/tree/master/docs/Module-Review/Y2S2/SC2207 Intro to Database Systems.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"sc2207-intro-to-database-systems",slug:"sc2207-intro-to-database-systems",sidebar_position:5,title:"SC2207 Intro to Database Systems",description:"Introductory module to relational databases",keywords:["database","computer","science","ntu","course","scse","module"]},sidebar:"tutorialSidebar",previous:{title:"MH3511 Data Analysis with computer",permalink:"/docs/Module-Review/Y2S2/mh3511-data-analysis-with-computer"},next:{title:"SC3000 Artificial Intelligence",permalink:"/docs/Module-Review/Y2S2/sc3000-artificial-intelligence"}},u={},d=[{value:"Course Summary",id:"course-summary",level:2},{value:"Workload",id:"workload",level:2},{value:"Projects",id:"projects",level:2},{value:"Things to take note of",id:"things-to-take-note-of",level:2},{value:"Conclusion",id:"conclusion",level:2}],p={toc:d};function m(e){var t=e.components,o=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"course-summary"},"Course Summary"),(0,a.kt)("p",null,"Introduction course to Database Management Systems (DBMS). Previous course code: CZ2007. Course can be broken down into two parts:"),(0,a.kt)("p",null,"First half:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Entity Relationship (ER Diagrams)"),(0,a.kt)("li",{parentName:"ol"},"Functional Dependencies"),(0,a.kt)("li",{parentName:"ol"},"Normalization (BCNF, 3NF)"),(0,a.kt)("li",{parentName:"ol"},"Relational Algebra")),(0,a.kt)("p",null,"Second half:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"SQL (Covers basic SQL operations such as SELECT, WHERE, JOIN, ORDER BY, EXIST, table creation/deletion/update, constraints, views/temporary views and indexes)"),(0,a.kt)("li",{parentName:"ol"},"Semi-Structured Data (XML, XML DTD, JSON, NoSQL)")),(0,a.kt)("h2",{id:"workload"},"Workload"),(0,a.kt)("p",null,"Workload is reasonable for a 3AU module. Weekly: 2 online Q&A (1hour), 1 tutorial (1hour). Labs are held once every 2 weeks (2hour). Content is reasonably easy to understand and there are lots of online resources with information on the topics covered. There is no finals but replaced by 2x30% tests (Week 8, Week 12) testing their respective halves."),(0,a.kt)("h2",{id:"projects"},"Projects"),(0,a.kt)("p",null,"Lab project with 3 deliverables (In groups of 4/5 people):"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"ER Diagram (Do not overthink the ER diagram!)"),(0,a.kt)("li",{parentName:"ol"},"Generation of Normalized Database Schema"),(0,a.kt)("li",{parentName:"ol"},"Implementation of SQL queries for a Final demonstration")),(0,a.kt)("h2",{id:"things-to-take-note-of"},"Things to take note of"),(0,a.kt)("p",null,"Being involved in the group project is a good way to practice the understanding of the concepts of ER Diagrams, FDs and Relational Algebra. For the SQL portion, I would recommend going to Leetcode to practice on top of the tutorial questions as they help you to develop a better understanding of the SQL syntax."),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"Foundational Database Module and a good chance to practice SQL which are tested in Data Science interviews for some companies. Overall, one of the easier computing modules."))}m.isMDXComponent=!0}}]);